// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreFlow.Ventas.API.Datos;

#nullable disable

namespace StoreFlow.Ventas.API.Migrations
{
    [DbContext(typeof(VentasDbContext))]
    [Migration("20250511191328_AgregarNombreYTamanoVideo")]
    partial class AgregarNombreYTamanoVideo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionEntrega")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdVendedor")
                        .HasColumnType("integer");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreVendedor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.PlanDeVentas", b =>
                {
                    b.Property<byte>("PeriodoTiempo")
                        .HasColumnType("smallint");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("integer");

                    b.Property<decimal>("MetaVentas")
                        .HasColumnType("numeric");

                    b.Property<string>("NombreVendedor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("PeriodoTiempo", "IdVendedor");

                    b.ToTable("PlanesDeVentas", (string)null);
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.ProductoPedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .HasColumnType("integer");

                    b.Property<int>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Imagen")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<bool>("TieneInventario")
                        .HasColumnType("boolean");

                    b.HasKey("IdPedido", "IdProducto");

                    b.ToTable("ProductosPedidos", (string)null);
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("NombreOriginal")
                        .HasColumnType("text");

                    b.Property<string>("Recomendacion")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<long>("TamanioBytes")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("VisitaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VisitaId")
                        .IsUnique();

                    b.ToTable("Videos", (string)null);
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Visita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Visitas", (string)null);
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.ProductoPedido", b =>
                {
                    b.HasOne("StoreFlow.Ventas.API.Entidades.Pedido", null)
                        .WithMany("ProductosPedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Video", b =>
                {
                    b.HasOne("StoreFlow.Ventas.API.Entidades.Visita", "Visita")
                        .WithOne("Video")
                        .HasForeignKey("StoreFlow.Ventas.API.Entidades.Video", "VisitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visita");
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Pedido", b =>
                {
                    b.Navigation("ProductosPedidos");
                });

            modelBuilder.Entity("StoreFlow.Ventas.API.Entidades.Visita", b =>
                {
                    b.Navigation("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
