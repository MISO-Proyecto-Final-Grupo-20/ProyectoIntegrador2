name: "Build, Push & Deploy to AKS - StoreFlow"

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: 'Build regardless of changes'
        type: boolean
        required: false
        default: false
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/${{ github.event.repository.name }}
  AKS_RESOURCE_GROUP: terraform-aks-dev
  AKS_CLUSTER_NAME: terraform-aks-dev-cluster

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase image prefix and version
        run: |
          echo "LOWERCASE_PREFIX=$(echo ${{ env.IMAGE_PREFIX }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV

      - name: Build and push Cliente Web
        uses: docker/build-push-action@v4
        with:
          context: ./UI
          file: ./UI/apps/web/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/cliente-web:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/cliente-web:latest

      - name: Build and push Usuarios Service
        uses: docker/build-push-action@v4
        with:
          context: ./Backend/StoreFlow.Usuarios
          file: ./Backend/StoreFlow.Usuarios/StoreFlow.Usuarios.API/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/usuarios:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/usuarios:latest

      - name: Build and push Compras Service
        uses: docker/build-push-action@v4
        with:
          context: ./Backend/StoreFlow.Compras
          file: ./Backend/StoreFlow.Compras/StoreFlow.Compras.API/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/compras:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/compras:latest

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set lowercase image prefix and version
        run: |
          echo "LOWERCASE_PREFIX=$(echo ${{ env.IMAGE_PREFIX }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "VERSION=${{ github.sha }}" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check if AKS cluster exists
        id: aks-check
        run: |
          if az aks show --name ${{ env.AKS_CLUSTER_NAME }} --resource-group ${{ env.AKS_RESOURCE_GROUP }} &> /dev/null; then
            echo "AKS_EXISTS=true" >> $GITHUB_ENV
          else
            echo "AKS_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Get AKS credentials
        if: env.AKS_EXISTS == 'true'
        run: |
          az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --admin --overwrite-existing

      - name: Update cliente-web image in AKS
        if: env.AKS_EXISTS == 'true'
        run: |
          kubectl set image deployment/cliente-web cliente-web=${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/cliente-web:${{ env.VERSION }} -n storeflow

      - name: Update usuarios image in AKS
        if: env.AKS_EXISTS == 'true'
        run: |
          kubectl set image deployment/usuarios usuarios=${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/usuarios:${{ env.VERSION }} -n storeflow

      - name: Update compras image in AKS
        if: env.AKS_EXISTS == 'true'
        run: |
          kubectl set image deployment/compras compras=${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/compras:${{ env.VERSION }} -n storeflow

  cleanup:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Delete old Cliente Web images
        continue-on-error: true
        uses: actions/delete-package-versions@v4
        with:
          package-name: '${{ env.REPO_NAME }}/cliente-web'
          package-type: 'container'
          min-versions-to-keep: 3
          delete-only-untagged-versions: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old Usuarios images
        continue-on-error: true
        uses: actions/delete-package-versions@v4
        with:
          package-name: '${{ env.REPO_NAME }}/usuarios'
          package-type: 'container'
          min-versions-to-keep: 3
          delete-only-untagged-versions: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old Compras images
        continue-on-error: true
        uses: actions/delete-package-versions@v4
        with:
          package-name: '${{ env.REPO_NAME }}/compras'
          package-type: 'container'
          min-versions-to-keep: 3
          delete-only-untagged-versions: false
          token: ${{ secrets.GITHUB_TOKEN }}