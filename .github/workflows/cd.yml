name: "Build and Push Docker Images"

on:
  workflow_dispatch:
    inputs:
      build_all:
        description: 'Build all services regardless of changes'
        type: boolean
        required: false
        default: false
  push:
    branches: 
      - main

env:
  CONNECTIONSTRINGS__VENTAS: ${{ secrets.CONNECTIONSTRINGS__VENTAS }}
  RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/${{ github.event.repository.name }}
  ELASTIC_URI: ${{ secrets.ELASTIC_URI }}
  ELASTIC_APM_URI: ${{ secrets.ELASTIC_APM_URI }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      should_build_all: ${{ steps.set-build-all.outputs.should_build_all }}
      ventas-service: ${{ steps.set-build-all.outputs.should_build_all == 'true' || steps.filter.outputs.ventas-service }}
    
    steps:
      - name: Set build all flag
        id: set-build-all
        shell: bash
        run: |
          BUILD_ALL="${{ github.event.inputs.build_all }}"
          if [ "$BUILD_ALL" = "true" ]; then
            echo "should_build_all=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_build_all=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            ventas-service:
              - 'experimento-hu012-ha10/Ventas/**'
              - 'experimento-hu012-ha10/Ventas/Dockerfile'
              - 'experimento-hu012-ha10/docker-compose.yaml'

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase image prefix and version
        run: |
          echo "LOWERCASE_PREFIX=$(echo ${{ env.IMAGE_PREFIX }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          # Use current date in YYYY-MM-DD format for versioning
          echo "VERSION=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build and push Ventas Service
        if: needs.detect-changes.outputs.ventas-service == 'true'
        uses: docker/build-push-action@v4
        with:
          context: ./experimento-hu012-ha10
          file: ./experimento-hu012-ha10/Ventas/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/ventas:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_PREFIX }}/ventas:latest

  cleanup:
    needs: [detect-changes, build-and-push]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    
    steps:
      - name: Set lowercase repository name
        run: |
          echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Delete old Ventas images
        if: needs.detect-changes.outputs.ventas-service == 'true'
        continue-on-error: true
        uses: actions/delete-package-versions@v4
        with:
          package-name: '${{ env.REPO_NAME }}/ventas'
          package-type: 'container'
          min-versions-to-keep: 3
          delete-only-untagged-versions: false
          token: ${{ secrets.GITHUB_TOKEN }}
